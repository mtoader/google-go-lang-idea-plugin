<!--
  ~ Copyright 2013-2014 Sergey Ignatov, Alexander Zolotov, Mihai Toader, Florin Patan
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<idea-plugin version="2">
  <id>ro.redeul.google.go</id>
  <name>Go</name>
  <version>1.0</version>
  <vendor url="https://github.com/go-lang-plugin-org/go-lang-idea-plugin"/>
  <category>Custom Languages</category>

  <description>
    <![CDATA[<h2>Support for Go programming language.</h2>
    ]]>
  </description>

  <change-notes>
    <![CDATA[
    <h3>1.0.0 changes:</h3>
        <ul>
            <li>[improvement] Fully reworked internals</li>
        </ul>
    ]]>
  </change-notes>

  <idea-version since-build="139.1111"/>
  <depends>com.intellij.modules.lang</depends>
  <depends optional="true" config-file="java-deps.xml">com.intellij.modules.java</depends>
  
  <module-components>
    <component>
      <implementation-class>com.goide.project.GoModuleLibrariesInitializer</implementation-class>
    </component>
  </module-components>

  <extensions defaultExtensionNs="com.intellij">
    <stubIndex implementation="com.goide.stubs.index.GoAllNamesIndex"/>
    <stubIndex implementation="com.goide.stubs.index.GoFunctionIndex"/>
    <stubIndex implementation="com.goide.stubs.index.GoTypesIndex"/>
    <stubIndex implementation="com.goide.stubs.index.GoPackagesIndex"/>
    <stubIndex implementation="com.goide.stubs.index.GoMethodIndex"/>
    <stubIndex implementation="com.goide.stubs.index.GoMethodFingerprintIndex"/>

    <internalFileTemplate name="Go Application"/>
    <internalFileTemplate name="Go File"/>
    
    <!-- project -->
    <applicationService serviceImplementation="com.goide.project.GoApplicationLibrariesService"/>
    <projectService serviceImplementation="com.goide.project.GoProjectLibrariesService"/>
    <moduleService serviceImplementation="com.goide.project.GoModuleLibrariesService"/>
    <projectConfigurable groupId="language" provider="com.goide.project.GoLibrariesConfigurableProvider"/>
    
    <defaultLiveTemplatesProvider implementation="com.goide.template.GoLiveTemplatesProvider"/>
    <liveTemplateContext implementation="com.goide.template.GoLiveTemplateContextType$GoEverywhereContextType"/>
    <liveTemplateContext implementation="com.goide.template.GoLiveTemplateContextType$GoFileContextType"/>
    <liveTemplateContext implementation="com.goide.template.GoLiveTemplateContextType$GoBlockContextType"/>
    <liveTemplateContext implementation="com.goide.template.GoLiveTemplateContextType$GoTypeContextType"/>
    <liveTemplateMacro implementation="com.goide.template.DirectoryNameMacro"/>

    <lang.elementManipulator forClass="com.goide.psi.GoImportString"
                             implementationClass="com.goide.psi.impl.manipulator.GoImportStringManipulator"/>

    <errorHandler implementation="com.goide.diagnostics.error.ErrorReporter"/>
    <extendWordSelectionHandler implementation="com.goide.editor.GoWordSelectioner"/>
    <annotator language="go" implementationClass="com.goide.GoAnnotator"/>
    
    <lang.importOptimizer language="go" implementationClass="com.goide.codeInsight.imports.GoImportOptimizer"/>
    <psi.fileReferenceHelper implementation="com.goide.psi.impl.imports.GoImportReferenceHelper"/>
    <fileContextProvider implementation="com.goide.psi.impl.imports.GoFileContextProvider"/>
    
    <lang.parserDefinition language="go" implementationClass="com.goide.GoParserDefinition"/>
    <fileTypeFactory implementation="com.goide.GoFileTypeFactory"/>
    <lang.syntaxHighlighterFactory key="go" implementationClass="com.goide.highlighting.GoSyntaxHighlighterFactory"/>
    <lang.psiStructureViewFactory language="go" implementationClass="com.goide.tree.GoStructureViewFactory"/>
    <colorSettingsPage implementation="com.goide.highlighting.GoColorsAndFontsPage"/>
    <lang.braceMatcher language="go" implementationClass="com.goide.editor.GoBraceMatcher"/>
    <quoteHandler fileType="Go" className="com.goide.editor.GoQuoteHandler"/>
    <lang.commenter language="go" implementationClass="com.goide.GoCommenter"/>
    <lang.elementManipulator forClass="com.goide.psi.impl.GoStringLiteralImpl" implementationClass="com.goide.psi.impl.manipulator.GoStringManipulator"/>
    <completion.contributor language="go" implementationClass="com.goide.completion.GoKeywordCompletionContributor"/>
    <completion.contributor language="go" order="last" implementationClass="com.goide.completion.GoAutoImportCompletionContributor"/>
    <completion.confidence language="go" order="last" implementationClass="com.goide.completion.GoCompletionConfidence"/>
    <lang.refactoringSupport language="go" implementationClass="com.goide.refactor.GoRefactoringSupportProvider"/>
    <spellchecker.support language="go" implementationClass="com.goide.inspections.GoSpellcheckingStrategy"/>
    <elementDescriptionProvider implementation="com.goide.refactor.GoDescriptionProvider"/>
    <lang.namesValidator language="go" implementationClass="com.goide.GoNamesValidator"/>
    <lang.findUsagesProvider language="go" implementationClass="com.goide.GoFindUsagesProvider"/>
    <lang.documentationProvider language="go" implementationClass="com.goide.GoDocumentationProvider"/>
    <lang.foldingBuilder language="go" implementationClass="com.goide.editor.GoFoldingBuilder"/>
    <typeDeclarationProvider implementation="com.goide.editor.GoTypeDeclarationProvider"/>
    <codeInsight.parameterInfo language="go" implementationClass="com.goide.editor.GoParameterInfoHandler"/>
    <lang.smartEnterProcessor language="go" implementationClass="com.goide.editor.smart.GoSmartEnterProcessor"/>
    <highlightUsagesHandlerFactory implementation="com.goide.highlighting.GoHighlightExitPointsHandlerFactory"/>
    <codeInsight.lineMarkerProvider language="go" implementationClass="com.goide.editor.marker.GoMethodSeparatorProvider"/>

    <!--formatter-->
    <lang.formatter language="go" implementationClass="com.goide.formatter.GoFormattingModelBuilder"/>
    <codeStyleSettingsProvider implementation="com.goide.formatter.settings.GoCodeStyleSettingsProvider"/>
    <langCodeStyleSettingsProvider implementation="com.goide.formatter.settings.GoLanguageCodeStyleSettingsProvider"/>
    
    <renamePsiElementProcessor implementation="com.goide.refactor.GoAnonymousFieldProcessor"/>

    <gotoSymbolContributor implementation="com.goide.go.GoSymbolContributor"/>
    <gotoClassContributor implementation="com.goide.go.GoTypeContributor"/>

    <sdkType implementation="com.goide.sdk.GoSdkType"/>

    <!-- run single file -->
    <configurationType implementation="com.goide.runconfig.file.GoRunFileConfigurationType"/>
    <runConfigurationProducer implementation="com.goide.runconfig.file.GoRunFileConfigurationProducer"/>

    <!-- run application -->
    <programRunner implementation="com.goide.runconfig.GoRunner"/>
    <runConfigurationProducer implementation="com.goide.runconfig.application.GoApplicationRunConfigurationProducer"/>
    <configurationType implementation="com.goide.runconfig.application.GoApplicationRunConfigurationType"/>

    <!-- test -->
    <runConfigurationProducer implementation="com.goide.runconfig.testing.GoTestRunConfigurationProducer"/>
    <configurationType implementation="com.goide.runconfig.testing.GoTestRunConfigurationType"/>
    <testFinder implementation="com.goide.runconfig.testing.GoTestFinder"/>
    <testSrcLocator implementation="com.goide.runconfig.testing.GoTestLocationProvider"/>

    <!-- debugger -->
    <xdebugger.breakpointType implementation="com.goide.debugger.ideagdb.debug.breakpoints.GdbBreakpointType"/>

    <!-- temporary debugger configurations -->
    <!-- todo: move it to run/test configurations -->
    <configurationType implementation="com.goide.debugger.ideagdb.run.GdbRunConfigurationType"/>
    <programRunner implementation="com.goide.debugger.ideagdb.run.GdbRunner"/>

    <checkinHandlerFactory implementation="com.goide.actions.fmt.GoFmtCheckinFactory" order="last"/>

    <editorNotificationProvider implementation="com.goide.inspections.SetupSDKNotificationProvider"/>
    
    <lang.inspectionSuppressor language="go" implementationClass="com.goide.inspections.suppression.GoInspectionSuppressor"/>
    
    <localInspection language="go" displayName="Unresolved reference inspection"
                     groupName="Go" enabledByDefault="true" level="ERROR"
                     implementationClass="com.goide.inspections.unresolved.GoUnresolvedReferenceInspection"/>
    <localInspection language="go" displayName="Unused import inspection"
                     groupName="Go" enabledByDefault="true" level="ERROR"
                     implementationClass="com.goide.inspections.GoUnusedImportDeclaration"/>
    <localInspection language="go" displayName="Duplicate fields and methods inspection"
                     groupName="Go" enabledByDefault="true" level="ERROR" 
                     implementationClass="com.goide.inspections.GoDuplicateFieldsOrMethodsInspection"/>
    <localInspection language="go" displayName="Unused variables inspection"
                     groupName="Go" enabledByDefault="true" level="ERROR"  
                     implementationClass="com.goide.inspections.unresolved.GoUnusedVariableInspection"/>
    <localInspection language="go" displayName="Unused global variables inspection"
                     groupName="Go" enabledByDefault="true" level="WARNING" 
                     implementationClass="com.goide.inspections.unresolved.GoUnusedGlobalVariableInspection"/>
    <localInspection language="go" displayName="Unused function inspection"
                     groupName="Go" enabledByDefault="true" level="WARNING" 
                     implementationClass="com.goide.inspections.unresolved.GoUnusedFunctionInspection"/>
    <localInspection language="go" displayName="Assignment to constant"
                     groupName="Go" enabledByDefault="true" level="ERROR"
                     implementationClass="com.goide.inspections.unresolved.GoAssignmentToConstantInspection"/>
    <localInspection language="go" displayName="Duplicate function"
                     groupName="Go" enabledByDefault="true" level="ERROR"
                     implementationClass="com.goide.inspections.GoDuplicateFunctionInspection"/>
    <localInspection language="go" displayName="Duplicate argument"
                     groupName="Go" enabledByDefault="true" level="ERROR" 
                     implementationClass="com.goide.inspections.GoDuplicateArgumentInspection"/>
    <localInspection language="go" displayName="Duplicate return argument"
                     groupName="Go" enabledByDefault="true" level="ERROR" 
                     implementationClass="com.goide.inspections.GoDuplicateReturnArgumentInspection"/>
    <localInspection language="go" displayName="Incorrect variadic parameter"
                     groupName="Go" enabledByDefault="true" level="ERROR" 
                     implementationClass="com.goide.inspections.GoFunctionVariadicParameterInspection"/>
    <localInspection language="go" displayName="Incorrect variable declaration"
                     groupName="Go" enabledByDefault="true" level="ERROR" 
                     implementationClass="com.goide.inspections.GoVarDeclarationInspection"/>
    <localInspection language="go" displayName="No new variables on left side of :="
                     groupName="Go" enabledByDefault="true" level="ERROR" 
                     implementationClass="com.goide.inspections.GoNoNewVariablesInspection"/>
    <localInspection language="go" displayName="Missing return at end of function"
                     groupName="Go" enabledByDefault="true" level="ERROR" 
                     implementationClass="com.goide.inspections.GoReturnInspection"/>
    <localInspection language="go" displayName="Function call inspection"
                     groupName="Go" enabledByDefault="true" level="ERROR" 
                     implementationClass="com.goide.inspections.GoFunctionCallInspection"/>
    <localInspection language="go" displayName="Defer/go statements check"
                     groupName="Go" enabledByDefault="true" level="ERROR"
                     implementationClass="com.goide.inspections.GoDeferGoInspection"/>
  </extensions>
  <actions>
    <action id="Go.NewGoFile" class="com.goide.actions.GoCreateFileAction"
            text="Go File" description="Create new Go file">
      <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
    </action>
    
    <action id="GoShowTypeInternalAction"
            class="com.goide.actions.internal.GoShowTypeInternalAction"
            text="Show Go type info">
      <add-to-group group-id="EditorPopupMenu" anchor="last"/>
    </action>

    <group id="GoTestGenerateGroup">
      <action id="GoGenerateTest" class="com.goide.generate.GenerateTestAction" text="Test"
              description="Creates Go test function"/>
      <action id="GoGenerateBenchmark" class="com.goide.generate.GenerateBenchmarkAction" text="Benchmark"
              description="Creates Go benchmark function"/>
      <separator/>
      <add-to-group group-id="GenerateGroup" anchor="first"/>
    </group>

    <action id="GoFmtFileAction" class="com.goide.actions.fmt.GoFmtFileAction" text="Go fmt file"
            description="Format selected file with go fmt util">
      <add-to-group group-id="CodeMenu" anchor="last"/>
      <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl alt F"/>
    </action>
    <action id="GoFmtProjectAction" class="com.goide.actions.fmt.GoFmtProjectAction" text="Go fmt project"
            description="Format project with go fmt util">
      <add-to-group group-id="CodeMenu" anchor="last"/>
      <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl alt P"/>
    </action>
    <action id="GoImportsFileAction" class="com.goide.actions.fmt.GoImportsFileAction" text="Goimports file"
            description="Optimizes imports for selected file with goimports util">
      <add-to-group group-id="CodeMenu" anchor="last"/>
    </action>
  </actions>

</idea-plugin>
