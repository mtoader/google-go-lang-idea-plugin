go.component.name=Go
go.sdk.name=Go SDK
go.sdk.version=Version:
go.sdk.target=Target system:
go.sdk.binaries=Binaries path:
go.sdk.binary.path=Binary path:
go.sdk.goroot.path=GOROOT path:
go.sdk.gopath.path=GOPATH path:
go.run.script=Ma&in go file\:
go.run.parameters=Argu&ments\:
go.run.module=&Module\:
error.package.keyword.expected="package" keyword expected
identifier.expected=Identifier expected
new.go.lib=New Go package
new.go.lib.description=Create new Go package
new.go.lib.action.text=New Go File
new.go.app=New Go application
new.go.app.description=Create new Go application
new.go.app.action.text=New Go File
file.template.group.title.go=Go file templates
go.facet.sdk.list=Go SDK list:
cannot.compile.go.files.no.facet=No Go facet available on module {0}
cannot.compile.no.go.project.sdk=No Sdk available on project {0}
cannot.compile.invalid.project.sdk=Project Sdk not a valid Go Sdk on project {0}
cannot.compile=Compilation Verification Error
go.sdk.framework.instructions=<html>   <head>    </head>   <body>     <p style="margin-top: 0">   aaf <a href="asdf">b</a>         </p>   </body> </html>\\
compiler.compiling.module=Compiling module: {0}
target.file.exists=Target file "{0}" already exits
color.go.default=Default settings
color.go.line.comment=Line comment
color.go.block.comment=Block comment
color.go.keyword=Keywords
color.go.number=Numbers
color.go.const=Constants
color.go.string=Strings
color.go.operators=Operators (+, =, ., etc)
color.go.brackets=Brackets
color.go.type.name=Type name
color.go.identifier=Identifier
color.go.variable=Variable
color.go.global.variable=Global variable
compiler.multiple.files.with.main.method=There are at least two files with main method in the same folder: {0} vs {1}
compiler.no.main.method.found=No file with main method found
go.module.type.name=Go Module
go.module.type.description=A module supporting Go development
go.module.application.name=Go Application
go.module.application.description=Go application.
go.app.engine.application.name=Go AppEngine Application
go.app.engine.application.description=Go AppEngine application.
go.app.engine.module.type.name=Go App Engine Module
go.app.engine.module.type.description=A module supporting Go App Engine development
go.setting.compiler.text=Choose your desired build system:
go.settings.compiler.internal=&Internal build system
go.settings.compiler.makefile=&Makefile based (experimental)
go.settings.completion.variables=Enable variables completion (experimental)
go.settings.build.title=Desired build system
go.sdk.configure.title=Select GOROOT folder
go.settings.feature.title=Experimental features
go.settings.features.imports=Go aware impor&ts optimizer
gae.run.sdk=SDK Directory
go.sdk.appengine.configure.title=Go App Engine Sdk Home Path
go.sdk.appengine.timestamp=Timestamp:
go.sdk.appengine.applevel=Api level:
go.sdk.appengine.email=&E-mail\:
go.sdk.appengine.password=&Password\:
go.sdk.appengine.credentials.explanation=The password is stored in the password safe.
new.go.file=Create Go file
new.go.file.description=This will create a new Go file in the current project
warning.unresolved.symbol=Unresolved symbol: ''{0}''
error.invalid.import=Invalid package import path
error.invalid.sdk.path=Invalid GOROOT path
error.primitive.name.is.readonly=Can't rename primitive type ''{0}''
error.method.name.expected=Method name expected
error.identifier.expected=Identifier expected
error.semicolon.expected=Semicolon expected
error.semicolon.or.newline.expected=';' or newline expected
error.statement.expected=Statement expected
case.of.default.keyword.expected='case' or 'default' keyword expected
error.missing.first.const.expression=Expression for first constant is mandatory
error.missing.expr.for.const.declaration=Missing expression in const declaration
error.extra.expr.in.const.declaration=Extra expression in const declaration
error.no.return.found=Function ends without a return statement
error.duplicate.argument=Duplicate argument {0}
error.redeclared.in.block={0} redeclared in this block
error.output.variadic=Cannot use ... in output argument list
error.variadic.not.the.last=Can only use ... as final argument in list
error.shadowed.during.return=Varibles {0} shadowed during return
error.redeclare=Redeclare in this block
error.no.new.variables.on.left.side=No new variables on left side of :=
error.multiple.value.in.single.value.context=multiple-value {0} in single-value context
error.no.expression.const.count.mismatch.in.const.declaration=The number of identifiers must be equal to the number of expressions in the previous list
error.calls.append.first.argument.must.be.slice=first argument to append must be slice; have {0}
semicolon.or.newline.or.closed.parenthesis.expected=';' or ')' or newline expected here
error.closing.para.expected=')' expected
error.closing.curly.expected='}' expected
error.import.path.expected=Import path expected
warning.unused.import=Unused import "{0}"
error.import.path.is.empty=Import path is empty
error.import.path.contains.space=Import path contains space character
error.import.path.contains.backslash=Import path contains backslash, use slash
error.import.path.notfound=Package "{0}" not found in project
error.import.path.equal.self=You can not import current package "{0}"
error.import.path.repeat=Package "{0}" has imported in this file
error.not.implemented=Sorry \! Not implemented yet \!
error.expression.has.void.return.type=Expression has void return type
error.missing.condition.in.if.statement=Missing condition in if statement


error.return.enough.args=not enough arguments to return
error.return.extra.args=too many arguments to return
error.return.extra.arg=extra argument to return
error.return.wrong.arg.type=cannot use {0} (type {1}) as type {2} in return argument

error.call.builtin.make.cannot.make.type=cannot make type {0}

error.call.builtin.copy.wrong.1st.arg=first argument to copy should be slice; have {0}
error.call.builtin.copy.wrong.2nd.arg=second argument to copy should be slice or string; have {0}
error.call.builtin.copy.args.type.mismatch=arguments to copy have different element types: {0} and {1}

error.call.builtin.delete.missing.key.arg=missing second (key) argument to delete
error.call.builtin.delete.wrong.map.arg=first argument to delete must be map; have {0}
error.call.builtin.delete.wrong.key.arg=cannot use {0} (type {1}) as type {2} in delete

error.call.builtin.close.no.channel.type=invalid operation: {0} (non-chan type {1})
error.call.builtin.close.wrong.channel.type=invalid operation: {0} (cannot close receive-only channel)

error.call.builtin.len.invalid.arg=invalid argument {0} (type {1}) for len

error.call.extra.arg=extra argument to {0}
error.call.extra.args=too many arguments in call to {0}
error.call.missing.arg=missing argument to {0}
error.call.missing.args=not enough arguments in call to {0}
error.call.arg.type.mismatch.multival=cannot use {0} as type {1} in argument to {2}
error.call.builtin.missing.type.arg=missing type argument to {0}
error.call.builtin.missing.args=missing arguments to {0}
error.call.builtin.type.not.expr=type {0} is not an expression

error.incorrect.make.type=Make type must be a slice, map or channel
error.duplicate.field=Duplicate field {0}

warn.index.invalid.index=invalid {0} index expression {1} with value {2} ({3})
warn.index.invalid.index.type=non-integer {0} index {1}
warn.index.invalid.key.type=cannot use {0} (type {1}) as type {2} in map index
warn.index.not.indexable.type=invalid operation: {0} (type {1} does not support indexing)

warn.expr.mispatched.types=invalid operation: {0} (mismatched types {1} and {2})
warn.expr.op.not.defined=invalid operation: {0} (operator {1} not defined on {2})

error.invalid.recursive.type=Invalid recursive type {0}
go.settings=Google Go
checkbox.show.auto.import.popup=Show import &popup
checkbox.optimize.imports.on.the.fly=&Optimize imports on the fly
error.type.expected=Type definition expected
error.expression.is.not.a.type={0} is not a type
error.invalid.expression=It's not a valid expression.
error.channel.type.expected=Channel type expected
error.block.of.if.statement.expected=Block or If statement expected
error.label.already.defined=Label {0} already defined.
error.label.defined.and.not.used=Label {0} defined and not used.
error.invalid.break.label=Invalid break label {0}.
error.invalid.continue.label=Invalid continue label {0}.
error.goto.jumps.into.block=goto {0} jumps into block.
error.goto.jumps.over.declaration=goto {0} jumps over declaration of {1}.
error.unknown.refactoring.case=Unknown refactoring case\!
error.variable.is.never.used=Variable is never used.
error.variable.is.used.before.modification=Variable is used before modification.
error.non.constant.expression=Constant expression expected
error.comma.expected.before.newline=',' expected before newline
error.comma.expected=',' expected
repackage.file.fix=Move to folder\: ''{0}''
repackage.file.fix.family=Package names fixes
update.package.name.fix=Set package name to\: ''{0}''
error.constant.not.used=Unused constant ''{0}''
error.variable.not.used=Unused variable ''{0}''
error.parameter.not.used=Unused parameter ''{0}''
error.invalid.package.name=Package name should be set to ''{0}''
error.invalid.package.name.with.test=Package name should be set to ''{0}'' or ''{0}_test''
type.declaration=Type Declaration
create.type=Create type "{0}"
warn.function.call.arg.type.mismatch=cannot use {0} (type {1}) as type {2} in argument to {3}
warn.function.return.type.mismatch=cannot use {0} (type {1}) as type {2} in return argument
go.run.executablename=Output e&xecutable name\:
go.run.package=Ma&in package directory\:
go.error.report.message=<html>Error Submitting Feedback: {0}<br>\
  Consider creating an issue at \
  <a href="https://github.com/go-lang-plugin-org/go-lang-idea-plugin/issues">Github Issue Tracker</a></html>
go.error.report.action=&Report on Github
go.new.package.file.chooser.title=New Go Package Files
go.new.package.file.chooser.description=Select the directory in which the Go package files are located

fix.add.import.choose.package.path=Choose package path
fix.add.import.text=import "{0}"
fix.add.import.family.name=Missing package imports
